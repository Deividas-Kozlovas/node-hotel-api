const mongoose = require("mongoose");
const User = require("../models/userModel");

// Protect route to verify if the user is logged in and has a valid token
exports.protect = async (req, res, next) => {
  let token;

  try {
    // Check if token exists in the Authorization header
    if (
      req.headers.authorization &&
      req.headers.authorization.startsWith("Bearer")
    ) {
      token = req.headers.authorization.split(" ")[1];
    }

    if (!token) {
      throw new Error("You are not logged in. Please log in to get access.");
    }

    // Verify the token
    const decoded = await promisify(jwt.verify)(token, process.env.JWT_SECRET);

    // Check if the user exists in the database
    const currentUser = await User.findById(decoded.id);
    if (!currentUser) {
      throw new Error("The user belonging to this token no longer exists.");
    }

    // Check if the user changed password after the token was issued
    if (currentUser.changePasswordAfter(decoded.iat)) {
      throw new Error("User changed password after token was issued.");
    }

    // Grant access to the protected route
    req.user = currentUser;
    next();
  } catch (err) {
    res.status(401).json({
      status: "Failed",
      message: err.message,
    });
  }
};
